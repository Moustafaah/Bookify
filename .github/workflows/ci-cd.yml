name: .NET CI/CD Pipeline

# Defines when the workflow runs: on push or pull request to the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering from the Actions tab

# Environment variables used across jobs
env:
  DOTNET_VERSION: '9.0.x' # Specify your .NET version (e.g., '6.0.x', '7.0.x')
  ARTIFACT_PATH: './publish' # Path for published artifacts

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Runs on the latest Ubuntu runner
    steps:
      # Step 1: Checks out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Sets up the specified .NET SDK version
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Step 3: Restores NuGet dependencies for the solution
      - name: Restore dependencies
        run: dotnet restore

      # Step 4: Builds the project in Release configuration
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # Step 5: Runs tests (assumes test projects exist; remove if no tests)
      - name: Test
        run: dotnet test --no-build --verbosity normal

      # Step 6: Publishes the app to the specified output path
      - name: Publish
        run: dotnet publish --configuration Release --output ${{ env.ARTIFACT_PATH }}

      # Step 7: Uploads the published output as an artifact for later use
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app # Artifact name
          path: ${{ env.ARTIFACT_PATH }} # Path to published files
          if-no-files-found: error # Fail if no files are found
          retention-days: 7 # Retain artifact for 7 days (adjust as needed)
